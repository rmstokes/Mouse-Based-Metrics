
//**Log Reader**
//-this is the component which will accept the log information that has been generated by BAC client data capture tool. 
//-right now the log reader should be able to simply read a text file but that will later change so that JSON data can be received and read from the client.
//-log reader should store the online id or username into a variable
//-log reader should step through the file parsing the information based on the format of the example data that we have from Jeff.
//
//Current log format:
//<timestamp> ":" <event code> ":" <event data><newline record separator>
//
//<timestamp> = number of milliseconds from first captured event
//<event code> = one letter code for type of captured event (M = mouse movement; C = Mouse Click; K = Key press).
//<event data> = empty for 'C' and 'K' events. For M events this is x,y  point data including the comma as delimiter.
//[note: we may later have access to x,y data for clicks as well so keep this in mind when coding].
//
//-Log Reader should create some type of list data structure to store all of the user events in order.
//--UserEvents could be base class/interface for all MouseMove, MouseClick, and KeyPress classes to extend/implement from.
//-Log Reader should create MouseMove objects for each mouse movement. These objects will have instance variables to represent the timestamp, x, and y coordinates.
//-Log Reader should create MouseClick objects for each mouse click. These objects will have timestamp and x,y coordinates as instance variables.
//-Log Reader should create key press objects for each key press. These objects will have a timestamp as the only instance variable.
//-Log Reader will send list of UserEvents to Preprocessor.

//package logreader;

/**
 *
 * @author Angelica Willis
 */
class UserEvent {
    private Double timeStamp;
    
    UserEvent(){
        timeStamp = 0.0;
    }
    

    /**
     * @return the timeStamp
     */
    public Double getTimeStamp() {
        return timeStamp;
    }

    /**
     * @param timeStamp the timeStamp to set
     */
    public void setTimeStamp(Double timeStamp) {
        this.timeStamp = timeStamp;
    }
    
    public String toString(){
        return ""+timeStamp;    
    }
    
    
    
}
