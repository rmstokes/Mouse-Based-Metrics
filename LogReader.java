
//**Log Reader**
//-this is the component which will accept the log information that has been generated by client data capture tool. 
//-right now the log reader should be able to simply read a text file but that will later change so that JSON data can be received and read from the client.
//-log reader should store the online id or username into a variable
//-log reader should step through the file parsing the information based on the format of the example data that we have from Jeff.
//<timestamp> = number of milliseconds from first captured event
//<event code> = one letter code for type of captured event (M = mouse movement; C = Mouse Click; K = Key press).
//<event data> = empty for 'C' and 'K' events. For M events this is x,y  point data including the comma as delimiter.
//[note: we may later have access to x,y data for clicks as well so keep this in mind when coding].
//
//-Log Reader should create some type of list data structure to store all of the user events in order.
//--UserEvents could be base class/interface for all MouseMove, MouseClick, and KeyPress classes to extend/implement from.
//-Log Reader should create MouseMove objects for each mouse movement. These objects will have instance variables to represent the timestamp, x, and y coordinates.
//-Log Reader should create MouseClick objects for each mouse click. These objects will have timestamp and x,y coordinates as instance variables.
//-Log Reader should create key press objects for each key press. These objects will have a timestamp as the only instance variable.
//-Log Reader will send list of UserEvents to Preprocessor.
//package logreader;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;

/**
 *
 * @author Angelica
 */
public class LogReader {

    /**
     * @param args the command line arguments
     */
    private ArrayList<ArrayList> userInstances; //a list of mouse movement lists

    private String userID;
    private int subjectNumber;

    LogReader(String file) {
        //for(int i = 0; i< filePaths.length; i++){ // for more than one file
        userInstances = new ArrayList();

        try {
            Scanner input = new Scanner(new File(file));
            userID = input.next();
            int start = file.indexOf('(')+1;
            int end = file.indexOf(')');
            subjectNumber = Integer.parseInt(file.substring(start, end))-1;
            //System.out.println("subjectNumber: "+subjectNumber);
            //System.exit(0);
            for (int runInstance = 0; runInstance < 10; runInstance++) {

                for (int i = 0; i < 6; i++) { //traverse unnecessary data
                    input.next();
                }
                ArrayList<MouseMovement> userBehavior = new ArrayList<MouseMovement>();
                String next = input.next(); 
                while (input.hasNext() && !next.equals(userID)) { // while traversing x coords
                    MouseMovement mouseMove = new MouseMovement(); //create a new object
                    mouseMove.setxLoc(Double.parseDouble(next)); // save  x coord
                    userBehavior.add(mouseMove); 

                    next = input.next();

                }
                for (int i = 0; i < 3; i++) { //traverse unnecessary data
                    next = input.next();
                    //System.out.println(next);
                }
                int moveIndex = 0;
                while (input.hasNext() && !(next.equals(userID))) {

                      //  System.out.println(next);
                    MouseMovement mouseMove = userBehavior.get(moveIndex);
                    mouseMove.setyLoc(Double.parseDouble(next)); // while traversing y coords
                    userBehavior.set(moveIndex, mouseMove);
                    next = input.next();
                    moveIndex++;

                }
                if (!input.hasNext()) { // last input

                    MouseMovement mouseMove = userBehavior.get(moveIndex); 
                    mouseMove.setyLoc(Double.parseDouble(next));
                    userBehavior.set(moveIndex, mouseMove);

                }

                userInstances.add(userBehavior); //add list of movements to list of lists

            }
        } catch (FileNotFoundException ex) {

            System.out.println("No File");
        }

        // }
    }
    
    public ArrayList <ArrayList> getUserInstances(){
    	return userInstances;
    }
    
    public String getUserID(){
    	return userID;
    }
    
    public int getSubjectNumber(){
    	return subjectNumber;
    }

    public String toString() {
        String s = "UserEvent Data for UserID: " + userID + "\n";
        for (int i = 0; i < userInstances.size(); i++) {
            for (int j = 0; j < userInstances.get(i).size(); j++) {
                s += userInstances.get(i).get(j).toString() + "\n";
            }
        }
        return s;
    }

   /* public static void main(String[] args) {
        // TODO code application logic here

        //we probaby need something more dynamic to read the file in with
        String[] path = {"C:\\Users\\Angelica\\Desktop\\A&T\\Research\\UserOutput (1)CASIS.txt"};
        LogReader lr = new LogReader(path);
        System.out.println(lr.toString());
    }*/

}
